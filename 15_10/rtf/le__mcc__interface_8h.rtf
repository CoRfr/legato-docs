{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
build/localhost/interfaces/le_mcc_interface.h File Reference\par \pard\plain 
{\tc\tcl2 \v build/localhost/interfaces/le_mcc_interface.h}
{\xe \v build/localhost/interfaces/le_mcc_interface.h}
{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "legato.h"}\par
{\f2 #include "le_mdmDefs_interface.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct le_mcc_Call * {\b le_mcc_CallRef_t}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct le_mcc_CallEventHandler * {\b le_mcc_CallEventHandlerRef_t}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void(* {\b le_mcc_CallEventHandlerFunc_t}) ({\b le_mcc_CallRef_t} callRef, {\b le_mcc_Event_t} event, void *contextPtr)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b le_mcc_Event_t} \{ {\b LE_MCC_EVENT_SETUP}, 
{\b LE_MCC_EVENT_INCOMING}, 
{\b LE_MCC_EVENT_ORIGINATING}, 
{\b LE_MCC_EVENT_ALERTING}, 
{\b LE_MCC_EVENT_EARLY_MEDIA}, 
{\b LE_MCC_EVENT_CONNECTED}, 
{\b LE_MCC_EVENT_TERMINATED}, 
{\b LE_MCC_EVENT_ON_HOLD}, 
{\b LE_MCC_EVENT_TRANSFERED}, 
{\b LE_MCC_EVENT_MAX}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b le_mcc_TerminationReason_t} \{ {\b LE_MCC_TERM_LOCAL_ENDED}, 
{\b LE_MCC_TERM_REMOTE_ENDED}, 
{\b LE_MCC_TERM_NETWORK_FAIL}, 
{\b LE_MCC_TERM_UNASSIGNED_NUMBER}, 
{\b LE_MCC_TERM_NO_ROUTE_TO_DESTINATION}, 
{\b LE_MCC_TERM_CHANNEL_UNACCEPTABLE}, 
{\b LE_MCC_TERM_OPERATOR_DETERMINED_BARRING}, 
{\b LE_MCC_TERM_USER_BUSY}, 
{\b LE_MCC_TERM_NO_USER_RESPONDING}, 
{\b LE_MCC_TERM_USER_ALERTING_NO_ANSWER}, 
{\b LE_MCC_TERM_CALL_REJECTED}, 
{\b LE_MCC_TERM_NUMBER_CHANGED}, 
{\b LE_MCC_TERM_PREEMPTION}, 
{\b LE_MCC_TERM_DESTINATION_OUT_OF_ORDER}, 
{\b LE_MCC_TERM_INVALID_NUMBER_FORMAT}, 
{\b LE_MCC_TERM_FACILITY_REJECTED}, 
{\b LE_MCC_TERM_RESP_TO_STATUS_ENQUIRY}, 
{\b LE_MCC_TERM_NORMAL_UNSPECIFIED}, 
{\b LE_MCC_TERM_NO_CIRCUIT_OR_CHANNEL_AVAILABLE}, 
{\b LE_MCC_TERM_NETWORK_OUT_OF_ORDER}, 
{\b LE_MCC_TERM_TEMPORARY_FAILURE}, 
{\b LE_MCC_TERM_SWITCHING_EQUIPMENT_CONGESTION}, 
{\b LE_MCC_TERM_ACCESS_INFORMATION_DISCARDED}, 
{\b LE_MCC_TERM_REQUESTED_CIRCUIT_OR_CHANNEL_NOT_AVAILABLE}, 
{\b LE_MCC_TERM_RESOURCES_UNAVAILABLE_OR_UNSPECIFIED}, 
{\b LE_MCC_TERM_QOS_UNAVAILABLE}, 
{\b LE_MCC_TERM_REQUESTED_FACILITY_NOT_SUBSCRIBED}, 
{\b LE_MCC_TERM_INCOMING_CALLS_BARRED_WITHIN_CUG}, 
{\b LE_MCC_TERM_BEARER_CAPABILITY_NOT_AUTH}, 
{\b LE_MCC_TERM_BEARER_CAPABILITY_UNAVAILABLE}, 
{\b LE_MCC_TERM_SERVICE_OPTION_NOT_AVAILABLE}, 
{\b LE_MCC_TERM_ACM_LIMIT_EXCEEDED}, 
{\b LE_MCC_TERM_BEARER_SERVICE_NOT_IMPLEMENTED}, 
{\b LE_MCC_TERM_REQUESTED_FACILITY_NOT_IMPLEMENTED}, 
{\b LE_MCC_TERM_ONLY_DIGITAL_INFORMATION_BEARER_AVAILABLE}, 
{\b LE_MCC_TERM_SERVICE_OR_OPTION_NOT_IMPLEMENTED}, 
{\b LE_MCC_TERM_INVALID_TRANSACTION_IDENTIFIER}, 
{\b LE_MCC_TERM_USER_NOT_MEMBER_OF_CUG}, 
{\b LE_MCC_TERM_INCOMPATIBLE_DESTINATION}, 
{\b LE_MCC_TERM_INVALID_TRANSIT_NW_SELECTION}, 
{\b LE_MCC_TERM_SEMANTICALLY_INCORRECT_MESSAGE}, 
{\b LE_MCC_TERM_INVALID_MANDATORY_INFORMATION}, 
{\b LE_MCC_TERM_MESSAGE_TYPE_NON_IMPLEMENTED}, 
{\b LE_MCC_TERM_MESSAGE_TYPE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE}, 
{\b LE_MCC_TERM_INFORMATION_ELEMENT_NON_EXISTENT}, 
{\b LE_MCC_TERM_CONDITONAL_IE_ERROR}, 
{\b LE_MCC_TERM_MESSAGE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE}, 
{\b LE_MCC_TERM_RECOVERY_ON_TIMER_EXPIRY}, 
{\b LE_MCC_TERM_PROTOCOL_ERROR_UNSPECIFIED}, 
{\b LE_MCC_TERM_INTERWORKING_UNSPECIFIED}, 
{\b LE_MCC_TERM_PLATFORM_SPECIFIC}, 
{\b LE_MCC_TERM_UNDEFINED}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b le_mcc_ConnectService} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b le_mcc_DisconnectService} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_mcc_CallRef_t} {\b le_mcc_Create} (const char *phoneNumPtr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mcc_Delete} ({\b le_mcc_CallRef_t} callRef)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mcc_Start} ({\b le_mcc_CallRef_t} callRef)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b le_mcc_IsConnected} ({\b le_mcc_CallRef_t} callRef)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mcc_GetRemoteTel} ({\b le_mcc_CallRef_t} callRef, char *telPtr, size_t telPtrNumElements)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_mcc_TerminationReason_t} {\b le_mcc_GetTerminationReason} ({\b le_mcc_CallRef_t} callRef)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b le_mcc_GetPlatformSpecificTerminationCode} ({\b le_mcc_CallRef_t} callRef)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mcc_Answer} ({\b le_mcc_CallRef_t} callRef)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mcc_HangUp} ({\b le_mcc_CallRef_t} callRef)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mcc_HangUpAll} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mcc_GetCallerIdRestrict} ({\b le_mcc_CallRef_t} callRef, {\b le_onoff_t} *clirStatusPtrPtr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_result_t} {\b le_mcc_SetCallerIdRestrict} ({\b le_mcc_CallRef_t} callRef, {\b le_onoff_t} clirStatus)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b le_mcc_CallEventHandlerRef_t} {\b le_mcc_AddCallEventHandler} ({\b le_mcc_CallEventHandlerFunc_t} handlerPtr, void *contextPtr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b le_mcc_RemoveCallEventHandler} ({\b le_mcc_CallEventHandlerRef_t} addHandlerRef)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Legato {\b Modem Call Control} include file.\par
Copyright (C) Sierra Wireless Inc. Use of this work is subject to license. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v le_mcc_CallEventHandlerFunc_t\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:le_mcc_CallEventHandlerFunc_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void(* le_mcc_CallEventHandlerFunc_t) ({\b le_mcc_CallRef_t} callRef, {\b le_mcc_Event_t} event, void *contextPtr)}}
\par
{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handler for call state changes.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The callRef has to be deleted using {\b le_mcc_Delete()} when LE_MCC_TERMINATED event is received, except if is has to be used for a future usage (with le_mcc_profile handler for instance, or dialing again the same number).\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i callRef} \cell }{The call reference. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i event} \cell }{Call event. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i contextPtr} \cell }{\cell }
{\row }
}
}}
{\xe \v le_mcc_CallEventHandlerRef_t\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:le_mcc_CallEventHandlerRef_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct le_mcc_CallEventHandler* {\b le_mcc_CallEventHandlerRef_t}}}
\par
{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reference type used by Add/Remove functions for EVENT 'le_mcc_CallEvent' \par
}}
{\xe \v le_mcc_CallRef_t\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:le_mcc_CallRef_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct le_mcc_Call* {\b le_mcc_CallRef_t}}}
\par
{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reference type for managing active calls. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v le_mcc_Event_t\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:le_mcc_Event_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b le_mcc_Event_t}}}
\par
{\bkmkstart AAAAAAAAWT}
{\bkmkend AAAAAAAAWT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration of the possible events that may be reported to a call event handler. \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LE_MCC_EVENT_SETUP\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_EVENT_SETUP}
{\b {\i LE_MCC_EVENT_SETUP{\bkmkstart AAAAAAAAWU}
{\bkmkend AAAAAAAAWU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Call is being set up. \par
}{\xe \v LE_MCC_EVENT_INCOMING\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_EVENT_INCOMING}
{\b {\i LE_MCC_EVENT_INCOMING{\bkmkstart AAAAAAAAWV}
{\bkmkend AAAAAAAAWV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Incoming call attempt (new call). \par
}{\xe \v LE_MCC_EVENT_ORIGINATING\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_EVENT_ORIGINATING}
{\b {\i LE_MCC_EVENT_ORIGINATING{\bkmkstart AAAAAAAAWW}
{\bkmkend AAAAAAAAWW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Outgoing call attempt. \par
}{\xe \v LE_MCC_EVENT_ALERTING\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_EVENT_ALERTING}
{\b {\i LE_MCC_EVENT_ALERTING{\bkmkstart AAAAAAAAWX}
{\bkmkend AAAAAAAAWX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Far end is now alerting its user (outgoing call). \par
}{\xe \v LE_MCC_EVENT_EARLY_MEDIA\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_EVENT_EARLY_MEDIA}
{\b {\i LE_MCC_EVENT_EARLY_MEDIA{\bkmkstart AAAAAAAAWY}
{\bkmkend AAAAAAAAWY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callee has not accepted the call, but a media stream is available. \par
}{\xe \v LE_MCC_EVENT_CONNECTED\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_EVENT_CONNECTED}
{\b {\i LE_MCC_EVENT_CONNECTED{\bkmkstart AAAAAAAAWZ}
{\bkmkend AAAAAAAAWZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Call has been established, and is media is active. \par
}{\xe \v LE_MCC_EVENT_TERMINATED\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_EVENT_TERMINATED}
{\b {\i LE_MCC_EVENT_TERMINATED{\bkmkstart AAAAAAAAXA}
{\bkmkend AAAAAAAAXA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Call has terminated. \par
}{\xe \v LE_MCC_EVENT_ON_HOLD\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_EVENT_ON_HOLD}
{\b {\i LE_MCC_EVENT_ON_HOLD{\bkmkstart AAAAAAAAXB}
{\bkmkend AAAAAAAAXB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remote party has put the call on hold. \par
}{\xe \v LE_MCC_EVENT_TRANSFERED\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_EVENT_TRANSFERED}
{\b {\i LE_MCC_EVENT_TRANSFERED{\bkmkstart AAAAAAAAXC}
{\bkmkend AAAAAAAAXC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remote party transferred or forwarded the call. \par
}{\xe \v LE_MCC_EVENT_MAX\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_EVENT_MAX}
{\b {\i LE_MCC_EVENT_MAX{\bkmkstart AAAAAAAAXD}
{\bkmkend AAAAAAAAXD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumerate max value. \par
}}}
{\xe \v le_mcc_TerminationReason_t\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:le_mcc_TerminationReason_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b le_mcc_TerminationReason_t}}}
\par
{\bkmkstart AAAAAAAAXE}
{\bkmkend AAAAAAAAXE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enumeration of the possible reasons for call termination. \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LE_MCC_TERM_LOCAL_ENDED\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_LOCAL_ENDED}
{\b {\i LE_MCC_TERM_LOCAL_ENDED{\bkmkstart AAAAAAAAXF}
{\bkmkend AAAAAAAAXF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Local party ended the call (Normal Call Clearing). \par
}{\xe \v LE_MCC_TERM_REMOTE_ENDED\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_REMOTE_ENDED}
{\b {\i LE_MCC_TERM_REMOTE_ENDED{\bkmkstart AAAAAAAAXG}
{\bkmkend AAAAAAAAXG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remote party ended the call (Normal Call Clearing). \par
}{\xe \v LE_MCC_TERM_NETWORK_FAIL\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_NETWORK_FAIL}
{\b {\i LE_MCC_TERM_NETWORK_FAIL{\bkmkstart AAAAAAAAXH}
{\bkmkend AAAAAAAAXH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Network could not complete the call. \par
}{\xe \v LE_MCC_TERM_UNASSIGNED_NUMBER\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_UNASSIGNED_NUMBER}
{\b {\i LE_MCC_TERM_UNASSIGNED_NUMBER{\bkmkstart AAAAAAAAXI}
{\bkmkend AAAAAAAAXI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_NO_ROUTE_TO_DESTINATION\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_NO_ROUTE_TO_DESTINATION}
{\b {\i LE_MCC_TERM_NO_ROUTE_TO_DESTINATION{\bkmkstart AAAAAAAAXJ}
{\bkmkend AAAAAAAAXJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_CHANNEL_UNACCEPTABLE\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_CHANNEL_UNACCEPTABLE}
{\b {\i LE_MCC_TERM_CHANNEL_UNACCEPTABLE{\bkmkstart AAAAAAAAXK}
{\bkmkend AAAAAAAAXK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_OPERATOR_DETERMINED_BARRING\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_OPERATOR_DETERMINED_BARRING}
{\b {\i LE_MCC_TERM_OPERATOR_DETERMINED_BARRING{\bkmkstart AAAAAAAAXL}
{\bkmkend AAAAAAAAXL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_USER_BUSY\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_USER_BUSY}
{\b {\i LE_MCC_TERM_USER_BUSY{\bkmkstart AAAAAAAAXM}
{\bkmkend AAAAAAAAXM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_NO_USER_RESPONDING\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_NO_USER_RESPONDING}
{\b {\i LE_MCC_TERM_NO_USER_RESPONDING{\bkmkstart AAAAAAAAXN}
{\bkmkend AAAAAAAAXN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_USER_ALERTING_NO_ANSWER\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_USER_ALERTING_NO_ANSWER}
{\b {\i LE_MCC_TERM_USER_ALERTING_NO_ANSWER{\bkmkstart AAAAAAAAXO}
{\bkmkend AAAAAAAAXO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_CALL_REJECTED\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_CALL_REJECTED}
{\b {\i LE_MCC_TERM_CALL_REJECTED{\bkmkstart AAAAAAAAXP}
{\bkmkend AAAAAAAAXP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_NUMBER_CHANGED\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_NUMBER_CHANGED}
{\b {\i LE_MCC_TERM_NUMBER_CHANGED{\bkmkstart AAAAAAAAXQ}
{\bkmkend AAAAAAAAXQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_PREEMPTION\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_PREEMPTION}
{\b {\i LE_MCC_TERM_PREEMPTION{\bkmkstart AAAAAAAAXR}
{\bkmkend AAAAAAAAXR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_DESTINATION_OUT_OF_ORDER\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_DESTINATION_OUT_OF_ORDER}
{\b {\i LE_MCC_TERM_DESTINATION_OUT_OF_ORDER{\bkmkstart AAAAAAAAXS}
{\bkmkend AAAAAAAAXS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_INVALID_NUMBER_FORMAT\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_INVALID_NUMBER_FORMAT}
{\b {\i LE_MCC_TERM_INVALID_NUMBER_FORMAT{\bkmkstart AAAAAAAAXT}
{\bkmkend AAAAAAAAXT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_FACILITY_REJECTED\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_FACILITY_REJECTED}
{\b {\i LE_MCC_TERM_FACILITY_REJECTED{\bkmkstart AAAAAAAAXU}
{\bkmkend AAAAAAAAXU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_RESP_TO_STATUS_ENQUIRY\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_RESP_TO_STATUS_ENQUIRY}
{\b {\i LE_MCC_TERM_RESP_TO_STATUS_ENQUIRY{\bkmkstart AAAAAAAAXV}
{\bkmkend AAAAAAAAXV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_NORMAL_UNSPECIFIED\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_NORMAL_UNSPECIFIED}
{\b {\i LE_MCC_TERM_NORMAL_UNSPECIFIED{\bkmkstart AAAAAAAAXW}
{\bkmkend AAAAAAAAXW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_NO_CIRCUIT_OR_CHANNEL_AVAILABLE\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_NO_CIRCUIT_OR_CHANNEL_AVAILABLE}
{\b {\i LE_MCC_TERM_NO_CIRCUIT_OR_CHANNEL_AVAILABLE{\bkmkstart AAAAAAAAXX}
{\bkmkend AAAAAAAAXX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_NETWORK_OUT_OF_ORDER\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_NETWORK_OUT_OF_ORDER}
{\b {\i LE_MCC_TERM_NETWORK_OUT_OF_ORDER{\bkmkstart AAAAAAAAXY}
{\bkmkend AAAAAAAAXY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_TEMPORARY_FAILURE\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_TEMPORARY_FAILURE}
{\b {\i LE_MCC_TERM_TEMPORARY_FAILURE{\bkmkstart AAAAAAAAXZ}
{\bkmkend AAAAAAAAXZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_SWITCHING_EQUIPMENT_CONGESTION\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_SWITCHING_EQUIPMENT_CONGESTION}
{\b {\i LE_MCC_TERM_SWITCHING_EQUIPMENT_CONGESTION{\bkmkstart AAAAAAAAYA}
{\bkmkend AAAAAAAAYA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_ACCESS_INFORMATION_DISCARDED\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_ACCESS_INFORMATION_DISCARDED}
{\b {\i LE_MCC_TERM_ACCESS_INFORMATION_DISCARDED{\bkmkstart AAAAAAAAYB}
{\bkmkend AAAAAAAAYB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_REQUESTED_CIRCUIT_OR_CHANNEL_NOT_AVAILABLE\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_REQUESTED_CIRCUIT_OR_CHANNEL_NOT_AVAILABLE}
{\b {\i LE_MCC_TERM_REQUESTED_CIRCUIT_OR_CHANNEL_NOT_AVAILABLE{\bkmkstart AAAAAAAAYC}
{\bkmkend AAAAAAAAYC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_RESOURCES_UNAVAILABLE_OR_UNSPECIFIED\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_RESOURCES_UNAVAILABLE_OR_UNSPECIFIED}
{\b {\i LE_MCC_TERM_RESOURCES_UNAVAILABLE_OR_UNSPECIFIED{\bkmkstart AAAAAAAAYD}
{\bkmkend AAAAAAAAYD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_QOS_UNAVAILABLE\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_QOS_UNAVAILABLE}
{\b {\i LE_MCC_TERM_QOS_UNAVAILABLE{\bkmkstart AAAAAAAAYE}
{\bkmkend AAAAAAAAYE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_REQUESTED_FACILITY_NOT_SUBSCRIBED\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_REQUESTED_FACILITY_NOT_SUBSCRIBED}
{\b {\i LE_MCC_TERM_REQUESTED_FACILITY_NOT_SUBSCRIBED{\bkmkstart AAAAAAAAYF}
{\bkmkend AAAAAAAAYF}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_INCOMING_CALLS_BARRED_WITHIN_CUG\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_INCOMING_CALLS_BARRED_WITHIN_CUG}
{\b {\i LE_MCC_TERM_INCOMING_CALLS_BARRED_WITHIN_CUG{\bkmkstart AAAAAAAAYG}
{\bkmkend AAAAAAAAYG}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_BEARER_CAPABILITY_NOT_AUTH\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_BEARER_CAPABILITY_NOT_AUTH}
{\b {\i LE_MCC_TERM_BEARER_CAPABILITY_NOT_AUTH{\bkmkstart AAAAAAAAYH}
{\bkmkend AAAAAAAAYH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_BEARER_CAPABILITY_UNAVAILABLE\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_BEARER_CAPABILITY_UNAVAILABLE}
{\b {\i LE_MCC_TERM_BEARER_CAPABILITY_UNAVAILABLE{\bkmkstart AAAAAAAAYI}
{\bkmkend AAAAAAAAYI}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_SERVICE_OPTION_NOT_AVAILABLE\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_SERVICE_OPTION_NOT_AVAILABLE}
{\b {\i LE_MCC_TERM_SERVICE_OPTION_NOT_AVAILABLE{\bkmkstart AAAAAAAAYJ}
{\bkmkend AAAAAAAAYJ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_ACM_LIMIT_EXCEEDED\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_ACM_LIMIT_EXCEEDED}
{\b {\i LE_MCC_TERM_ACM_LIMIT_EXCEEDED{\bkmkstart AAAAAAAAYK}
{\bkmkend AAAAAAAAYK}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_BEARER_SERVICE_NOT_IMPLEMENTED\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_BEARER_SERVICE_NOT_IMPLEMENTED}
{\b {\i LE_MCC_TERM_BEARER_SERVICE_NOT_IMPLEMENTED{\bkmkstart AAAAAAAAYL}
{\bkmkend AAAAAAAAYL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_REQUESTED_FACILITY_NOT_IMPLEMENTED\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_REQUESTED_FACILITY_NOT_IMPLEMENTED}
{\b {\i LE_MCC_TERM_REQUESTED_FACILITY_NOT_IMPLEMENTED{\bkmkstart AAAAAAAAYM}
{\bkmkend AAAAAAAAYM}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_ONLY_DIGITAL_INFORMATION_BEARER_AVAILABLE\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_ONLY_DIGITAL_INFORMATION_BEARER_AVAILABLE}
{\b {\i LE_MCC_TERM_ONLY_DIGITAL_INFORMATION_BEARER_AVAILABLE{\bkmkstart AAAAAAAAYN}
{\bkmkend AAAAAAAAYN}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_SERVICE_OR_OPTION_NOT_IMPLEMENTED\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_SERVICE_OR_OPTION_NOT_IMPLEMENTED}
{\b {\i LE_MCC_TERM_SERVICE_OR_OPTION_NOT_IMPLEMENTED{\bkmkstart AAAAAAAAYO}
{\bkmkend AAAAAAAAYO}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_INVALID_TRANSACTION_IDENTIFIER\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_INVALID_TRANSACTION_IDENTIFIER}
{\b {\i LE_MCC_TERM_INVALID_TRANSACTION_IDENTIFIER{\bkmkstart AAAAAAAAYP}
{\bkmkend AAAAAAAAYP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_USER_NOT_MEMBER_OF_CUG\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_USER_NOT_MEMBER_OF_CUG}
{\b {\i LE_MCC_TERM_USER_NOT_MEMBER_OF_CUG{\bkmkstart AAAAAAAAYQ}
{\bkmkend AAAAAAAAYQ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_INCOMPATIBLE_DESTINATION\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_INCOMPATIBLE_DESTINATION}
{\b {\i LE_MCC_TERM_INCOMPATIBLE_DESTINATION{\bkmkstart AAAAAAAAYR}
{\bkmkend AAAAAAAAYR}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_INVALID_TRANSIT_NW_SELECTION\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_INVALID_TRANSIT_NW_SELECTION}
{\b {\i LE_MCC_TERM_INVALID_TRANSIT_NW_SELECTION{\bkmkstart AAAAAAAAYS}
{\bkmkend AAAAAAAAYS}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_SEMANTICALLY_INCORRECT_MESSAGE\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_SEMANTICALLY_INCORRECT_MESSAGE}
{\b {\i LE_MCC_TERM_SEMANTICALLY_INCORRECT_MESSAGE{\bkmkstart AAAAAAAAYT}
{\bkmkend AAAAAAAAYT}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_INVALID_MANDATORY_INFORMATION\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_INVALID_MANDATORY_INFORMATION}
{\b {\i LE_MCC_TERM_INVALID_MANDATORY_INFORMATION{\bkmkstart AAAAAAAAYU}
{\bkmkend AAAAAAAAYU}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_MESSAGE_TYPE_NON_IMPLEMENTED\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_MESSAGE_TYPE_NON_IMPLEMENTED}
{\b {\i LE_MCC_TERM_MESSAGE_TYPE_NON_IMPLEMENTED{\bkmkstart AAAAAAAAYV}
{\bkmkend AAAAAAAAYV}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_MESSAGE_TYPE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_MESSAGE_TYPE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE}
{\b {\i LE_MCC_TERM_MESSAGE_TYPE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE{\bkmkstart AAAAAAAAYW}
{\bkmkend AAAAAAAAYW}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_INFORMATION_ELEMENT_NON_EXISTENT\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_INFORMATION_ELEMENT_NON_EXISTENT}
{\b {\i LE_MCC_TERM_INFORMATION_ELEMENT_NON_EXISTENT{\bkmkstart AAAAAAAAYX}
{\bkmkend AAAAAAAAYX}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_CONDITONAL_IE_ERROR\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_CONDITONAL_IE_ERROR}
{\b {\i LE_MCC_TERM_CONDITONAL_IE_ERROR{\bkmkstart AAAAAAAAYY}
{\bkmkend AAAAAAAAYY}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_MESSAGE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_MESSAGE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE}
{\b {\i LE_MCC_TERM_MESSAGE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE{\bkmkstart AAAAAAAAYZ}
{\bkmkend AAAAAAAAYZ}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_RECOVERY_ON_TIMER_EXPIRY\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_RECOVERY_ON_TIMER_EXPIRY}
{\b {\i LE_MCC_TERM_RECOVERY_ON_TIMER_EXPIRY{\bkmkstart AAAAAAAAZA}
{\bkmkend AAAAAAAAZA}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_PROTOCOL_ERROR_UNSPECIFIED\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_PROTOCOL_ERROR_UNSPECIFIED}
{\b {\i LE_MCC_TERM_PROTOCOL_ERROR_UNSPECIFIED{\bkmkstart AAAAAAAAZB}
{\bkmkend AAAAAAAAZB}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_INTERWORKING_UNSPECIFIED\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_INTERWORKING_UNSPECIFIED}
{\b {\i LE_MCC_TERM_INTERWORKING_UNSPECIFIED{\bkmkstart AAAAAAAAZC}
{\bkmkend AAAAAAAAZC}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
cf. 3GPP 24.008 Annex H \par
}{\xe \v LE_MCC_TERM_PLATFORM_SPECIFIC\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_PLATFORM_SPECIFIC}
{\b {\i LE_MCC_TERM_PLATFORM_SPECIFIC{\bkmkstart AAAAAAAAZD}
{\bkmkend AAAAAAAAZD}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Platform specific code. \par
}{\xe \v LE_MCC_TERM_UNDEFINED\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:LE_MCC_TERM_UNDEFINED}
{\b {\i LE_MCC_TERM_UNDEFINED{\bkmkstart AAAAAAAAZE}
{\bkmkend AAAAAAAAZE}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Undefined reason. \par
}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v le_mcc_AddCallEventHandler\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:le_mcc_AddCallEventHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_mcc_CallEventHandlerRef_t} le_mcc_AddCallEventHandler ({\b le_mcc_CallEventHandlerFunc_t}  {\i handlerPtr}, void *  {\i contextPtr})}}
\par
{\bkmkstart AAAAAAAAZF}
{\bkmkend AAAAAAAAZF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add handler function for EVENT 'le_mcc_CallEvent'\par
Register an event handler that will be notified when an call's event occurs.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid A reference to the new event handler object.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid It is a fatal error if this function does succeed. If this function fails, it will not return. \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i handlerPtr} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i contextPtr} \cell }{\cell }
{\row }
}
}}
{\xe \v le_mcc_Answer\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:le_mcc_Answer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mcc_Answer ({\b le_mcc_CallRef_t}  {\i callRef})}}
\par
{\bkmkstart AAAAAAAAZG}
{\bkmkend AAAAAAAAZG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Answers incoming call.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid LE_TIMEOUT No response was received from the Modem. \par
LE_OK The function succeeded.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If the caller is passing a bad pointer into this function, it is a fatal error, the function will not return. \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i callRef} \cell }{The call reference. \cell }
{\row }
}
}}
{\xe \v le_mcc_ConnectService\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:le_mcc_ConnectService}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void le_mcc_ConnectService (void )}}
\par
{\bkmkstart AAAAAAAAZH}
{\bkmkend AAAAAAAAZH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Connect the client to the service \par
}}
{\xe \v le_mcc_Create\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:le_mcc_Create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_mcc_CallRef_t} le_mcc_Create (const char *  {\i phoneNumPtr})}}
\par
{\bkmkstart AAAAAAAAZI}
{\bkmkend AAAAAAAAZI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create a call reference.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Return NULL if call reference can't be created\par
If destination number is too long (max LE_MDMDEFS_PHONE_NUM_MAX_LEN digits), it is a fatal error, the function will not return. \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i phoneNumPtr} \cell }{The target number we are going to call. \cell }
{\row }
}
}}
{\xe \v le_mcc_Delete\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:le_mcc_Delete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mcc_Delete ({\b le_mcc_CallRef_t}  {\i callRef})}}
\par
{\bkmkstart AAAAAAAAZJ}
{\bkmkend AAAAAAAAZJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Call to free up a call reference.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OK The function succeed.\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_NOT_FOUND The call reference was not found.\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_FAULT The function failed. \par}
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i callRef} \cell }{The call object to free. \cell }
{\row }
}
}}
{\xe \v le_mcc_DisconnectService\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:le_mcc_DisconnectService}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void le_mcc_DisconnectService (void )}}
\par
{\bkmkstart AAAAAAAAZK}
{\bkmkend AAAAAAAAZK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disconnect the client from the service \par
}}
{\xe \v le_mcc_GetCallerIdRestrict\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:le_mcc_GetCallerIdRestrict}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mcc_GetCallerIdRestrict ({\b le_mcc_CallRef_t}  {\i callRef}, {\b le_onoff_t} *  {\i clirStatusPtrPtr})}}
\par
{\bkmkstart AAAAAAAAZL}
{\bkmkend AAAAAAAAZL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function return the Calling Line Identification Restriction (CLIR) status on the specific call.\par
The output parameter is updated with the CLIR status.{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
LE_ON Disable presentation of own phone number to remote.\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
LE_OFF Enable presentation of own phone number to remote.\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OK The function succeed.\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_NOT_FOUND The call reference was not found. \par}
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i callRef} \cell }{The call reference. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i clirStatusPtrPtr} \cell }{the Calling Line Identification Restriction (CLIR) status \cell }
{\row }
}
}}
{\xe \v le_mcc_GetPlatformSpecificTerminationCode\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:le_mcc_GetPlatformSpecificTerminationCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t le_mcc_GetPlatformSpecificTerminationCode ({\b le_mcc_CallRef_t}  {\i callRef})}}
\par
{\bkmkstart AAAAAAAAZM}
{\bkmkend AAAAAAAAZM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Called to get the platform specific termination code.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The platform specific termination code.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If the caller is passing a bad pointer into this function, it is a fatal error, the function will not return. \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i callRef} \cell }{The call reference to read from. \cell }
{\row }
}
}}
{\xe \v le_mcc_GetRemoteTel\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:le_mcc_GetRemoteTel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mcc_GetRemoteTel ({\b le_mcc_CallRef_t}  {\i callRef}, char *  {\i telPtr}, size_t  {\i telPtrNumElements})}}
\par
{\bkmkstart AAAAAAAAZN}
{\bkmkend AAAAAAAAZN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read out the remote party telephone number associated with the call.\par
Output parameter is updated with the telephone number. If the Telephone number string length exceeds the value of 'len' parameter, the LE_OVERFLOW error code is returned and 'telPtr' is used until 'len-1' characters and a null-character is implicitly appended at the end of 'telPtr'. Note that 'len' sould be at least equal to LE_MDMDEFS_PHONE_NUM_MAX_BYTES, otherwise LE_OVERFLOW error code will be common.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid LE_OVERFLOW The Telephone number length exceed the maximum length. \par
LE_OK The function succeeded.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If the caller is passing a bad pointer into this function, it is a fatal error, the function will not return. \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i callRef} \cell }{The call reference to read from. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i telPtr} \cell }{The telephone number string. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i telPtrNumElements} \cell }{\cell }
{\row }
}
}}
{\xe \v le_mcc_GetTerminationReason\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:le_mcc_GetTerminationReason}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_mcc_TerminationReason_t} le_mcc_GetTerminationReason ({\b le_mcc_CallRef_t}  {\i callRef})}}
\par
{\bkmkstart AAAAAAAAZO}
{\bkmkend AAAAAAAAZO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Called to get the termination reason.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The termination reason.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If the caller is passing a bad pointer into this function, it is a fatal error, the function will not return. \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i callRef} \cell }{The call reference to read from. \cell }
{\row }
}
}}
{\xe \v le_mcc_HangUp\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:le_mcc_HangUp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mcc_HangUp ({\b le_mcc_CallRef_t}  {\i callRef})}}
\par
{\bkmkstart AAAAAAAAZP}
{\bkmkend AAAAAAAAZP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Disconnect, or hang up, the specifed call. Any active call handlers will be notified.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid LE_FAULT The function failed. \par
LE_TIMEOUT No response was received from the Modem. \par
LE_OK Function succeeded.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If the caller is passing a bad pointer into this function, it is a fatal error, the function will not return. \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i callRef} \cell }{The call to end. \cell }
{\row }
}
}}
{\xe \v le_mcc_HangUpAll\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:le_mcc_HangUpAll}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mcc_HangUpAll (void )}}
\par
{\bkmkstart AAAAAAAAZQ}
{\bkmkend AAAAAAAAZQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function will disconnect, or hang up all the ongoing calls. Any active call handlers will be notified.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid LE_FAULT The function failed. \par
LE_TIMEOUT No response was received from the Modem. \par
LE_OK The function succeeded. \par
}}}
{\xe \v le_mcc_IsConnected\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:le_mcc_IsConnected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool le_mcc_IsConnected ({\b le_mcc_CallRef_t}  {\i callRef})}}
\par
{\bkmkstart AAAAAAAAZR}
{\bkmkend AAAAAAAAZR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allow the caller to know if the given call is actually connected or not.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid TRUE if the call is connected, FALSE otherwise.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid If the caller is passing a bad pointer into this function, it is a fatal error, the function will not return. \par
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i callRef} \cell }{The call reference to read. \cell }
{\row }
}
}}
{\xe \v le_mcc_RemoveCallEventHandler\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:le_mcc_RemoveCallEventHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void le_mcc_RemoveCallEventHandler ({\b le_mcc_CallEventHandlerRef_t}  {\i addHandlerRef})}}
\par
{\bkmkstart AAAAAAAAZS}
{\bkmkend AAAAAAAAZS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remove handler function for EVENT 'le_mcc_CallEvent' \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i addHandlerRef} \cell }{\cell }
{\row }
}
}}
{\xe \v le_mcc_SetCallerIdRestrict\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:le_mcc_SetCallerIdRestrict}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mcc_SetCallerIdRestrict ({\b le_mcc_CallRef_t}  {\i callRef}, {\b le_onoff_t}  {\i clirStatus})}}
\par
{\bkmkstart AAAAAAAAZT}
{\bkmkend AAAAAAAAZT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function set the Calling Line Identification Restriction (CLIR) status on the specific call. Default value is LE_OFF (Enable presentation of own phone number to remote).\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {
\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_OK The function succeed.\par
\pard\plain \s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid 
LE_NOT_FOUND The call reference was not found. \par}
}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i callRef} \cell }{The call reference. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i clirStatus} \cell }{The Calling Line Identification Restriction (CLIR) status. \cell }
{\row }
}
}}
{\xe \v le_mcc_Start\:le_mcc_interface.h}
{\xe \v le_mcc_interface.h\:le_mcc_Start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b le_result_t} le_mcc_Start ({\b le_mcc_CallRef_t}  {\i callRef})}}
\par
{\bkmkstart AAAAAAAAZU}
{\bkmkend AAAAAAAAZU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start a call attempt.\par
Asynchronous due to possible time to connect.\par
As the call attempt proceeds, the profile's registered call event handler receives events.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid LE_OK Function succeed.\par
}{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s63\li1080\widctlpar\ql\adjustright \fs20\cgrid As this is an asynchronous call, a successful only confirms a call has been started. Don't assume a call has been successful yet.\par
If the caller is passing a bad pointer into this function, it is a fatal error, the function will not return. \par
}\par}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i callRef} \cell }{Reference to the call object. \cell }
{\row }
}
}}
}